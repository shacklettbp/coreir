{"top":"global.counters",
"namespaces":{
  "corebit":{
    
  },
  "coreir":{
    "generators":{
      "add":{
        "typegen":"coreir.binary",
        "genparams":{"width":"Int"}
      },
      "const":{
        "typegen":"coreir.out",
        "genparams":{"width":"Int"}
      },
      "mux":{
        "typegen":"coreir.muxType",
        "genparams":{"width":"Int"}
      },
      "reg":{
        "typegen":"coreir.regType",
        "genparams":{"width":"Int"}
      }
    }
  },
  "global":{
    "modules":{
      "counter":{
        "type":["Record",{
          "clk":["Named","coreir.clkIn"],
          "clr":"BitIn",
          "out":["Array",16,"Bit"]
        }],
        "instances":{
          "a":{
            "genref":"coreir.add",
            "genargs":{"width":["Int",16]}
          },
          "c1":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],1]}
          },
          "r":{
            "genref":"mantle.reg",
            "genargs":{"has_clr":["Bool",true], "has_en":["Bool",false], "has_rst":["Bool",false], "width":["Int",16]},
            "modargs":{"init":[["BitVector",16],55]}
          }
        },
        "connections":[
          ["a.in0","c1.out"],
          ["a.in1","r.out"],
          ["a.out","r.in"],
          ["r.clk","self.clk"],
          ["r.clr","self.clr"],
          ["r.out","self.out"]
        ]
      },
      "counters":{
        "type":["Record",{
          "clk":["Named","coreir.clkIn"]
        }],
        "instances":{
          "count0":{
            "modref":"global.counter"
          },
          "count1":{
            "modref":"global.counter"
          }
        },
        "connections":[
          ["count0.clk","self.clk"],
          ["count0.clr","count1.out.8"],
          ["count1.clk","self.clk"],
          ["count1.clr","count0.out.4"]
        ]
      }
    }
  },
  "mantle":{
    "modules":{
      "reg":{
        "genref":"mantle.reg",
        "genargs":{"has_clr":["Bool",true], "has_en":["Bool",false], "has_rst":["Bool",false], "width":["Int",16]},
        "type":["Record",{
          "in":["Array",16,"BitIn"],
          "clk":["Named","coreir.clkIn"],
          "out":["Array",16,"Bit"],
          "clr":"BitIn"
        }],
        "modparams":{"init":["BitVector",16]},
        "defaultmodargs":{"init":[["BitVector",16],0]},
        "instances":{
          "c0":{
            "genref":"coreir.const",
            "genargs":{"width":["Int",16]},
            "modargs":{"value":[["BitVector",16],0]}
          },
          "clrMux":{
            "genref":"coreir.mux",
            "genargs":{"width":["Int",16]}
          },
          "reg0":{
            "genref":"coreir.reg",
            "genargs":{"width":["Int",16]},
            "modargs":{"init":[["BitVector",16],"Arg","init"]}
          }
        },
        "connections":[
          ["c0.out","clrMux.in1"],
          ["clrMux.in0","self.in"],
          ["clrMux.out","reg0.in"],
          ["clrMux.sel","self.clr"],
          ["reg0.clk","self.clk"],
          ["reg0.out","self.out"]
        ]
      }
    },
    "generators":{
      "reg":{
        "typegen":"mantle.regType",
        "genparams":{"has_clr":"Bool", "has_en":"Bool", "has_rst":"Bool", "width":"Int"},
        "defaultgenargs":{"has_clr":["Bool",false], "has_en":["Bool",false], "has_rst":["Bool",false]}
      }
    }
  }
}
}
